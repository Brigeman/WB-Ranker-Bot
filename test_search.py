#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–∏—Å–∫–∞ –Ω–∞ Wildberries
"""

import asyncio
import logging
from app.config import Settings
from app.wb_playwright_adapter import WBPlaywrightAdapter

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)

async def test_search():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –Ω–∞ WB"""
    
    # –°–æ–∑–¥–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    settings = Settings()
    
    # –°–æ–∑–¥–∞–µ–º –∞–¥–∞–ø—Ç–µ—Ä
    adapter = WBPlaywrightAdapter(settings, logging.getLogger("test"))
    
    try:
        async with adapter:
            print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –ø–æ–∏—Å–∫–∞...")
            print("‚úÖ –ë—Ä–∞—É–∑–µ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –ø–æ –ø–æ–ø—É–ª—è—Ä–Ω–æ–º—É –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É
            keyword = "—Ç–µ–ª–µ—Ñ–æ–Ω"
            product_id = 527860183  # ID —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞
            
            print(f"üîç –ò—â–µ–º —Ç–æ–≤–∞—Ä {product_id} –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É '{keyword}'")
            
            result = await adapter.search_product(
                keyword=keyword,
                product_id=product_id,
                max_pages=1  # –¢–æ–ª—å–∫–æ –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–ª—è —Ç–µ—Å—Ç–∞
            )
            
            print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞:")
            print(f"   - –ù–∞–π–¥–µ–Ω: {result.product is not None}")
            print(f"   - –ü–æ–∑–∏—Ü–∏—è: {result.position}")
            print(f"   - –°—Ç—Ä–∞–Ω–∏—Ü–∞: {result.page}")
            print(f"   - –í—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü: {result.total_pages_searched}")
            
            if result.product:
                print(f"   - –ù–∞–∑–≤–∞–Ω–∏–µ: {result.product.name}")
                print(f"   - –ë—Ä–µ–Ω–¥: {result.product.brand}")
                print(f"   - –¶–µ–Ω–∞: {result.product.price_rub} ‚ÇΩ")
            
            print("‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_search())